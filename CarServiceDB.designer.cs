#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Task_DelLine
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CarService")]
	public partial class CarServiceDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertRepairman(Repairman instance);
    partial void UpdateRepairman(Repairman instance);
    partial void DeleteRepairman(Repairman instance);
    partial void InsertTaskForCar(TaskForCar instance);
    partial void UpdateTaskForCar(TaskForCar instance);
    partial void DeleteTaskForCar(TaskForCar instance);
    partial void InsertWorkGenerator(WorkGenerator instance);
    partial void UpdateWorkGenerator(WorkGenerator instance);
    partial void DeleteWorkGenerator(WorkGenerator instance);
    #endregion
		
		public CarServiceDBDataContext() : 
				base(global::Task_DelLine.Properties.Settings.Default.CarServiceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CarServiceDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarServiceDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarServiceDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarServiceDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Car> Car
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
		
		public System.Data.Linq.Table<Client> Client
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Repairman> Repairman
		{
			get
			{
				return this.GetTable<Repairman>();
			}
		}
		
		public System.Data.Linq.Table<TaskForCar> TaskForCar
		{
			get
			{
				return this.GetTable<TaskForCar>();
			}
		}
		
		public System.Data.Linq.Table<WorkGenerator> WorkGenerator
		{
			get
			{
				return this.GetTable<WorkGenerator>();
			}
		}
		
		public System.Data.Linq.Table<CarView> CarView
		{
			get
			{
				return this.GetTable<CarView>();
			}
		}
		
		public System.Data.Linq.Table<ClientView> ClientView
		{
			get
			{
				return this.GetTable<ClientView>();
			}
		}
		
		public System.Data.Linq.Table<DefaultView> DefaultView
		{
			get
			{
				return this.GetTable<DefaultView>();
			}
		}
		
		public System.Data.Linq.Table<RepairmanView> RepairmanView
		{
			get
			{
				return this.GetTable<RepairmanView>();
			}
		}
		
		public System.Data.Linq.Table<Task_2> Task_2
		{
			get
			{
				return this.GetTable<Task_2>();
			}
		}
		
		public System.Data.Linq.Table<Task_3> Task_3
		{
			get
			{
				return this.GetTable<Task_3>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Car")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarId;
		
		private int _ClientId;
		
		private string _LicensePlate;
		
		private int _Mileage;
		
		private double _EngineVolume;
		
		private System.DateTime _RegistrationDate;
		
		private string _Model;
		
		private string _Brand;
		
		private EntitySet<TaskForCar> _TaskForCar;
		
		private EntityRef<Client> _Client;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarIdChanging(int value);
    partial void OnCarIdChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnLicensePlateChanging(string value);
    partial void OnLicensePlateChanged();
    partial void OnMileageChanging(int value);
    partial void OnMileageChanged();
    partial void OnEngineVolumeChanging(double value);
    partial void OnEngineVolumeChanged();
    partial void OnRegistrationDateChanging(System.DateTime value);
    partial void OnRegistrationDateChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    #endregion
		
		public Car()
		{
			this._TaskForCar = new EntitySet<TaskForCar>(new Action<TaskForCar>(this.attach_TaskForCar), new Action<TaskForCar>(this.detach_TaskForCar));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CarId
		{
			get
			{
				return this._CarId;
			}
			set
			{
				if ((this._CarId != value))
				{
					this.OnCarIdChanging(value);
					this.SendPropertyChanging();
					this._CarId = value;
					this.SendPropertyChanged("CarId");
					this.OnCarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensePlate", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string LicensePlate
		{
			get
			{
				return this._LicensePlate;
			}
			set
			{
				if ((this._LicensePlate != value))
				{
					this.OnLicensePlateChanging(value);
					this.SendPropertyChanging();
					this._LicensePlate = value;
					this.SendPropertyChanged("LicensePlate");
					this.OnLicensePlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Int NOT NULL")]
		public int Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineVolume", DbType="Float NOT NULL")]
		public double EngineVolume
		{
			get
			{
				return this._EngineVolume;
			}
			set
			{
				if ((this._EngineVolume != value))
				{
					this.OnEngineVolumeChanging(value);
					this.SendPropertyChanging();
					this._EngineVolume = value;
					this.SendPropertyChanged("EngineVolume");
					this.OnEngineVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_TaskForCar", Storage="_TaskForCar", ThisKey="CarId", OtherKey="CarId")]
		public EntitySet<TaskForCar> TaskForCar
		{
			get
			{
				return this._TaskForCar;
			}
			set
			{
				this._TaskForCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Car", Storage="_Client", ThisKey="ClientId", OtherKey="ClientId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Car.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Car.Add(this);
						this._ClientId = value.ClientId;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaskForCar(TaskForCar entity)
		{
			this.SendPropertyChanging();
			entity.Car = this;
		}
		
		private void detach_TaskForCar(TaskForCar entity)
		{
			this.SendPropertyChanging();
			entity.Car = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Patronymic;
		
		private string _Phonenumber;
		
		private string _ResidentialAddress;
		
		private string _PassportData;
		
		private System.DateTime _RegistrationDate;
		
		private EntitySet<Car> _Car;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPatronymicChanging(string value);
    partial void OnPatronymicChanged();
    partial void OnPhonenumberChanging(string value);
    partial void OnPhonenumberChanged();
    partial void OnResidentialAddressChanging(string value);
    partial void OnResidentialAddressChanged();
    partial void OnPassportDataChanging(string value);
    partial void OnPassportDataChanged();
    partial void OnRegistrationDateChanging(System.DateTime value);
    partial void OnRegistrationDateChanged();
    #endregion
		
		public Client()
		{
			this._Car = new EntitySet<Car>(new Action<Car>(this.attach_Car), new Action<Car>(this.detach_Car));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronymic", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Patronymic
		{
			get
			{
				return this._Patronymic;
			}
			set
			{
				if ((this._Patronymic != value))
				{
					this.OnPatronymicChanging(value);
					this.SendPropertyChanging();
					this._Patronymic = value;
					this.SendPropertyChanged("Patronymic");
					this.OnPatronymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phonenumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Phonenumber
		{
			get
			{
				return this._Phonenumber;
			}
			set
			{
				if ((this._Phonenumber != value))
				{
					this.OnPhonenumberChanging(value);
					this.SendPropertyChanging();
					this._Phonenumber = value;
					this.SendPropertyChanged("Phonenumber");
					this.OnPhonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentialAddress", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ResidentialAddress
		{
			get
			{
				return this._ResidentialAddress;
			}
			set
			{
				if ((this._ResidentialAddress != value))
				{
					this.OnResidentialAddressChanging(value);
					this.SendPropertyChanging();
					this._ResidentialAddress = value;
					this.SendPropertyChanged("ResidentialAddress");
					this.OnResidentialAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportData", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PassportData
		{
			get
			{
				return this._PassportData;
			}
			set
			{
				if ((this._PassportData != value))
				{
					this.OnPassportDataChanging(value);
					this.SendPropertyChanging();
					this._PassportData = value;
					this.SendPropertyChanged("PassportData");
					this.OnPassportDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Car", Storage="_Car", ThisKey="ClientId", OtherKey="ClientId")]
		public EntitySet<Car> Car
		{
			get
			{
				return this._Car;
			}
			set
			{
				this._Car.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Car(Car entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Car(Car entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Repairman")]
	public partial class Repairman : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepairmanId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Patronymic;
		
		private string _Phonenumber;
		
		private System.DateTime _DateOfEmployment;
		
		private EntitySet<TaskForCar> _TaskForCar;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepairmanIdChanging(int value);
    partial void OnRepairmanIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPatronymicChanging(string value);
    partial void OnPatronymicChanged();
    partial void OnPhonenumberChanging(string value);
    partial void OnPhonenumberChanged();
    partial void OnDateOfEmploymentChanging(System.DateTime value);
    partial void OnDateOfEmploymentChanged();
    #endregion
		
		public Repairman()
		{
			this._TaskForCar = new EntitySet<TaskForCar>(new Action<TaskForCar>(this.attach_TaskForCar), new Action<TaskForCar>(this.detach_TaskForCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairmanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepairmanId
		{
			get
			{
				return this._RepairmanId;
			}
			set
			{
				if ((this._RepairmanId != value))
				{
					this.OnRepairmanIdChanging(value);
					this.SendPropertyChanging();
					this._RepairmanId = value;
					this.SendPropertyChanged("RepairmanId");
					this.OnRepairmanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronymic", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Patronymic
		{
			get
			{
				return this._Patronymic;
			}
			set
			{
				if ((this._Patronymic != value))
				{
					this.OnPatronymicChanging(value);
					this.SendPropertyChanging();
					this._Patronymic = value;
					this.SendPropertyChanged("Patronymic");
					this.OnPatronymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phonenumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Phonenumber
		{
			get
			{
				return this._Phonenumber;
			}
			set
			{
				if ((this._Phonenumber != value))
				{
					this.OnPhonenumberChanging(value);
					this.SendPropertyChanging();
					this._Phonenumber = value;
					this.SendPropertyChanged("Phonenumber");
					this.OnPhonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfEmployment", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfEmployment
		{
			get
			{
				return this._DateOfEmployment;
			}
			set
			{
				if ((this._DateOfEmployment != value))
				{
					this.OnDateOfEmploymentChanging(value);
					this.SendPropertyChanging();
					this._DateOfEmployment = value;
					this.SendPropertyChanged("DateOfEmployment");
					this.OnDateOfEmploymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Repairman_TaskForCar", Storage="_TaskForCar", ThisKey="RepairmanId", OtherKey="RepairmanId")]
		public EntitySet<TaskForCar> TaskForCar
		{
			get
			{
				return this._TaskForCar;
			}
			set
			{
				this._TaskForCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaskForCar(TaskForCar entity)
		{
			this.SendPropertyChanging();
			entity.Repairman = this;
		}
		
		private void detach_TaskForCar(TaskForCar entity)
		{
			this.SendPropertyChanging();
			entity.Repairman = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskForCar")]
	public partial class TaskForCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskForCarId;
		
		private int _CarId;
		
		private int _RepairmanId;
		
		private string _VehicleMalfunction;
		
		private double _Cost;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _FinishDate;
		
		private EntityRef<Car> _Car;
		
		private EntityRef<Repairman> _Repairman;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskForCarIdChanging(int value);
    partial void OnTaskForCarIdChanged();
    partial void OnCarIdChanging(int value);
    partial void OnCarIdChanged();
    partial void OnRepairmanIdChanging(int value);
    partial void OnRepairmanIdChanged();
    partial void OnVehicleMalfunctionChanging(string value);
    partial void OnVehicleMalfunctionChanged();
    partial void OnCostChanging(double value);
    partial void OnCostChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnFinishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishDateChanged();
    #endregion
		
		public TaskForCar()
		{
			this._Car = default(EntityRef<Car>);
			this._Repairman = default(EntityRef<Repairman>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskForCarId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskForCarId
		{
			get
			{
				return this._TaskForCarId;
			}
			set
			{
				if ((this._TaskForCarId != value))
				{
					this.OnTaskForCarIdChanging(value);
					this.SendPropertyChanging();
					this._TaskForCarId = value;
					this.SendPropertyChanged("TaskForCarId");
					this.OnTaskForCarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarId", DbType="Int NOT NULL")]
		public int CarId
		{
			get
			{
				return this._CarId;
			}
			set
			{
				if ((this._CarId != value))
				{
					if (this._Car.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarIdChanging(value);
					this.SendPropertyChanging();
					this._CarId = value;
					this.SendPropertyChanged("CarId");
					this.OnCarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairmanId", DbType="Int NOT NULL")]
		public int RepairmanId
		{
			get
			{
				return this._RepairmanId;
			}
			set
			{
				if ((this._RepairmanId != value))
				{
					if (this._Repairman.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepairmanIdChanging(value);
					this.SendPropertyChanging();
					this._RepairmanId = value;
					this.SendPropertyChanged("RepairmanId");
					this.OnRepairmanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleMalfunction", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string VehicleMalfunction
		{
			get
			{
				return this._VehicleMalfunction;
			}
			set
			{
				if ((this._VehicleMalfunction != value))
				{
					this.OnVehicleMalfunctionChanging(value);
					this.SendPropertyChanging();
					this._VehicleMalfunction = value;
					this.SendPropertyChanged("VehicleMalfunction");
					this.OnVehicleMalfunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float NOT NULL")]
		public double Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishDate
		{
			get
			{
				return this._FinishDate;
			}
			set
			{
				if ((this._FinishDate != value))
				{
					this.OnFinishDateChanging(value);
					this.SendPropertyChanging();
					this._FinishDate = value;
					this.SendPropertyChanged("FinishDate");
					this.OnFinishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_TaskForCar", Storage="_Car", ThisKey="CarId", OtherKey="CarId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Car Car
		{
			get
			{
				return this._Car.Entity;
			}
			set
			{
				Car previousValue = this._Car.Entity;
				if (((previousValue != value) 
							|| (this._Car.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car.Entity = null;
						previousValue.TaskForCar.Remove(this);
					}
					this._Car.Entity = value;
					if ((value != null))
					{
						value.TaskForCar.Add(this);
						this._CarId = value.CarId;
					}
					else
					{
						this._CarId = default(int);
					}
					this.SendPropertyChanged("Car");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Repairman_TaskForCar", Storage="_Repairman", ThisKey="RepairmanId", OtherKey="RepairmanId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Repairman Repairman
		{
			get
			{
				return this._Repairman.Entity;
			}
			set
			{
				Repairman previousValue = this._Repairman.Entity;
				if (((previousValue != value) 
							|| (this._Repairman.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Repairman.Entity = null;
						previousValue.TaskForCar.Remove(this);
					}
					this._Repairman.Entity = value;
					if ((value != null))
					{
						value.TaskForCar.Add(this);
						this._RepairmanId = value.RepairmanId;
					}
					else
					{
						this._RepairmanId = default(int);
					}
					this.SendPropertyChanged("Repairman");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkGenerator")]
	public partial class WorkGenerator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _WorkName;
		
		private int _Cost;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkNameChanging(string value);
    partial void OnWorkNameChanged();
    partial void OnCostChanging(int value);
    partial void OnCostChanged();
    #endregion
		
		public WorkGenerator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string WorkName
		{
			get
			{
				return this._WorkName;
			}
			set
			{
				if ((this._WorkName != value))
				{
					this.OnWorkNameChanging(value);
					this.SendPropertyChanging();
					this._WorkName = value;
					this.SendPropertyChanged("WorkName");
					this.OnWorkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Int NOT NULL")]
		public int Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarView")]
	public partial class CarView
	{
		
		private int _Id;
		
		private string _Brand;
		
		private string _Model;
		
		private double _EngineVolume;
		
		private string _LicensePlate;
		
		private int _Mileage;
		
		private string _OwnerName;
		
		private System.DateTime _RegistrationDate;
		
		public CarView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineVolume", DbType="Float NOT NULL")]
		public double EngineVolume
		{
			get
			{
				return this._EngineVolume;
			}
			set
			{
				if ((this._EngineVolume != value))
				{
					this._EngineVolume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensePlate", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string LicensePlate
		{
			get
			{
				return this._LicensePlate;
			}
			set
			{
				if ((this._LicensePlate != value))
				{
					this._LicensePlate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Int NOT NULL")]
		public int Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this._Mileage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="NVarChar(152) NOT NULL", CanBeNull=false)]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this._OwnerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this._RegistrationDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientView")]
	public partial class ClientView
	{
		
		private int _Id;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _Patronymic;
		
		private string _Phonenumber;
		
		private string _ResidentialAddress;
		
		private string _PassportData;
		
		private System.DateTime _RegistrationDate;
		
		public ClientView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronymic", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Patronymic
		{
			get
			{
				return this._Patronymic;
			}
			set
			{
				if ((this._Patronymic != value))
				{
					this._Patronymic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phonenumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Phonenumber
		{
			get
			{
				return this._Phonenumber;
			}
			set
			{
				if ((this._Phonenumber != value))
				{
					this._Phonenumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentialAddress", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ResidentialAddress
		{
			get
			{
				return this._ResidentialAddress;
			}
			set
			{
				if ((this._ResidentialAddress != value))
				{
					this._ResidentialAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportData", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PassportData
		{
			get
			{
				return this._PassportData;
			}
			set
			{
				if ((this._PassportData != value))
				{
					this._PassportData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this._RegistrationDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefaultView")]
	public partial class DefaultView
	{
		
		private int _Id;
		
		private string _RepairmanName;
		
		private string _CarName;
		
		private string _ClientName;
		
		private string _VehicleMalfunction;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _FinishDate;
		
		private double _Cost;
		
		public DefaultView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairmanName", DbType="NVarChar(152) NOT NULL", CanBeNull=false)]
		public string RepairmanName
		{
			get
			{
				return this._RepairmanName;
			}
			set
			{
				if ((this._RepairmanName != value))
				{
					this._RepairmanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(152) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this._ClientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleMalfunction", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string VehicleMalfunction
		{
			get
			{
				return this._VehicleMalfunction;
			}
			set
			{
				if ((this._VehicleMalfunction != value))
				{
					this._VehicleMalfunction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishDate
		{
			get
			{
				return this._FinishDate;
			}
			set
			{
				if ((this._FinishDate != value))
				{
					this._FinishDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float NOT NULL")]
		public double Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepairmanView")]
	public partial class RepairmanView
	{
		
		private int _Id;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _Patronymic;
		
		private string _Phonenumber;
		
		private System.DateTime _DateOfEmployment;
		
		private System.Nullable<int> _Experience;
		
		public RepairmanView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronymic", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Patronymic
		{
			get
			{
				return this._Patronymic;
			}
			set
			{
				if ((this._Patronymic != value))
				{
					this._Patronymic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phonenumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Phonenumber
		{
			get
			{
				return this._Phonenumber;
			}
			set
			{
				if ((this._Phonenumber != value))
				{
					this._Phonenumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfEmployment", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfEmployment
		{
			get
			{
				return this._DateOfEmployment;
			}
			set
			{
				if ((this._DateOfEmployment != value))
				{
					this._DateOfEmployment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Experience", DbType="Int")]
		public System.Nullable<int> Experience
		{
			get
			{
				return this._Experience;
			}
			set
			{
				if ((this._Experience != value))
				{
					this._Experience = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task_2")]
	public partial class Task_2
	{
		
		private string _RepairmanName;
		
		private string _CarName;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<double> _Cost;
		
		public Task_2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairmanName", DbType="NVarChar(152)")]
		public string RepairmanName
		{
			get
			{
				return this._RepairmanName;
			}
			set
			{
				if ((this._RepairmanName != value))
				{
					this._RepairmanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(101)")]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float")]
		public System.Nullable<double> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task_3")]
	public partial class Task_3
	{
		
		private string _RepairmanName;
		
		private string _CarName;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<decimal> _pct;
		
		private System.Nullable<double> _Cost;
		
		public Task_3()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairmanName", DbType="NVarChar(152)")]
		public string RepairmanName
		{
			get
			{
				return this._RepairmanName;
			}
			set
			{
				if ((this._RepairmanName != value))
				{
					this._RepairmanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(101)")]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pct", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> pct
		{
			get
			{
				return this._pct;
			}
			set
			{
				if ((this._pct != value))
				{
					this._pct = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float")]
		public System.Nullable<double> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
